spring:
  profiles:
    active: peer1
---
spring:
  profiles: standalone
  application:
    name: eureka-service

server:
  port: 8761

eureka:
  instance:
    hostname: standalone
    # instance-id是Eureka服务唯一的标记，主要用与区分统一服务集群中的不同实例（一般来讲一个Eureka服务实例默认注册instanceId是他的主机名，即一个主机只有一个服务，这样就会引发一个问题：默认情况下一台主机不能启动多个属于同一台服务的实例）
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  client:
    register-with-eureka: false # 表明服务不会向Eureka Server注册自己的信息（standalone模式）
    fetch-registry: false       # 表明服务不会向注册中心拉去注册信息（standalone模式）
    service-url:                # Eureka Server注册中心的地址，用与client与server进行交流
      defaultZone: http://localhost:${server.port}/eureka/
---
spring:
  profiles: peer1
  application:
    name: eureka-service

server:
  port: 8762

eureka:
  instance:
    hostname: peer1
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8763/eureka/
---
spring:
  profiles: peer2
  application:
    name: eureka-service

server:
  port: 8763

eureka:
  instance:
    hostname: peer2
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8762/eureka/